package jpa.entitymodels;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "Student_Course")
public class Student_Course {
	
	@Id
	@Column(name = "id")
	private String id;
	
	@Column(name = "studentId")
	private String studentId;
	
	@Column(name = "courseId")
	private Integer courseId;
	
	// a single row of student_course can only have 1 course and 1 student	
	@OneToMany(mappedBy = "studentCourses", fetch = FetchType.EAGER, cascade = CascadeType.ALL)
	@EqualsAndHashCode.Exclude
	@ToString.Exclude
	private List<Student> students;

//	@OneToMany(mappedBy = "Student_Course", fetch = FetchType.EAGER, cascade = CascadeType.ALL)
//	@EqualsAndHashCode.Exclude
//	@ToString.Exclude
//	private List<Course> courses;
}
